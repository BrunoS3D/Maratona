{"version":3,"sources":["components/Navbar/styles.js","components/Navbar/index.js","components/Switch/styles.js","components/Switch/index.js","components/VideoTheater/styles.js","components/VideoTheater/index.js","components/LinkListModal/styles.js","components/LinkListModal/index.js","components/PageContainer/index.js","components/InfoContainer/index.js","App.js","index.js"],"names":["Container","styled","div","Navbar","playlistAdd","useState","url","setUrl","className","href","data-color-scheme","data-size","data-show-count","aria-label","onSubmit","event","preventDefault","type","value","onChange","target","placeholder","data-icon","label","checked","height","width","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","theaterMode","VideoTheater","source","onEnded","autoPlay","id","src","controls","preload","LinkListModal","setPlaylist","closeModal","text","setText","urlList","setUrlList","isJSON","setIsJSON","React","useEffect","initial_list","join","url_list","JSON","parse","filter","item","validator","isURL","error","split","onClick","e","Switch","el_value","length","disabled","App","current","setCurrent","playlist","autoplay","setAutoplay","loadNext","setLoadNext","setTheaterMode","displayModal","setDisplayModal","VideoThumbnail","videoUrl","visible","setVisible","videoDuration","setVideoDuration","onLoadedMetadata","duration","Date","toISOString","substr","replace","style","PageContainer","InfoContainer","map","video_url","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8154659.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    & {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 56px;\n        background-color: #282828;\n        z-index: 5;\n    }\n\n    .layout {\n        height: 100%;\n        max-width: 90%;\n        margin: 0 auto;\n\n        display: flex;\n        flex-direction: row;\n\n        align-items: center;\n        justify-content: space-between;\n    }\n\n    form {\n        width: 100%;\n        height: 100%;\n\n        display: flex;\n        flex-direction: row;\n\n        align-items: center;\n        justify-content: center;\n    }\n\n    input {\n        padding: 5px 10px;\n        font-size: 1rem;\n        color: #282828;\n    }\n\n    input[type=\"url\"] {\n        min-width: 40%;\n\n        border-radius: 3px 0 0 3px;\n        border: 1px solid #393939;\n\n        color: #ccc;\n        background-color: #121212;\n    }\n\n    input[type=\"submit\"] {\n        color: #ccc;\n        border-radius: 0 3px 3px 0;\n\n        border: 1px solid #393939;\n        background-color: #393939;\n    }\n\n    .github-buttons {\n        display: flex;\n        flex-direction: row;\n\n        align-items: center;\n        justify-content: center;\n    }\n\n    .github-buttons > * {\n        margin-left: 5px;\n    }\n`;\n","import React, { useState } from \"react\";\nimport GitHubButton from \"react-github-btn\";\n\nimport { Container } from \"./styles\";\n\nexport default function Navbar({ playlistAdd }) {\n    const [url, setUrl] = useState(\"\");\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        if (playlistAdd(url)) {\n            setUrl(\"\");\n        }\n    }\n\n    function handleInputChange(event) {\n        setUrl(event.target.value);\n    }\n\n    return (\n        <Container>\n            <div className=\"layout\">\n                <GitHubButton\n                    href=\"https://github.com/BrunoS3D\"\n                    data-color-scheme=\"no-preference: dark; light: dark; dark: dark;\"\n                    data-size=\"large\"\n                    data-show-count=\"true\"\n                    aria-label=\"Follow @BrunoS3D on GitHub\"\n                >\n                    Follow @BrunoS3D\n                </GitHubButton>\n                <form onSubmit={handleSubmit}>\n                    <input type=\"url\" value={url} onChange={handleInputChange} placeholder=\"Insert your video url...\" />\n                    <input type=\"submit\" value=\"Add\" />\n                </form>\n                <div className=\"github-buttons\">\n                    <GitHubButton\n                        href=\"https://github.com/BrunoS3D/Maratona/subscription\"\n                        data-color-scheme=\"no-preference: dark; light: dark; dark: dark;\"\n                        data-icon=\"octicon-eye\"\n                        data-size=\"large\"\n                        data-show-count=\"true\"\n                        aria-label=\"Watch BrunoS3D/Maratona on GitHub\"\n                    >\n                        Watch\n                    </GitHubButton>\n                    <GitHubButton\n                        href=\"https://github.com/BrunoS3D/Maratona\"\n                        data-color-scheme=\"no-preference: dark; light: dark; dark: dark;\"\n                        data-icon=\"octicon-star\"\n                        data-size=\"large\"\n                        data-show-count=\"true\"\n                        aria-label=\"Star BrunoS3D/Maratona on GitHub\"\n                    >\n                        Star\n                    </GitHubButton>\n                    <GitHubButton\n                        href=\"https://github.com/BrunoS3D/Maratona/fork\"\n                        data-color-scheme=\"no-preference: dark; light: dark; dark: dark;\"\n                        data-icon=\"octicon-repo-forked\"\n                        data-size=\"large\"\n                        data-show-count=\"true\"\n                        aria-label=\"Fork BrunoS3D/Maratona on GitHub\"\n                    >\n                        Fork\n                    </GitHubButton>\n                </div>\n            </div>\n        </Container>\n    );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.label`\n    & {\n        display: flex;\n        flex-direction: row;\n\n        margin: 5px 0;\n        justify-content: space-between;\n    }\n`;\n","import React from \"react\";\nimport Switch from \"react-switch\";\n\nimport { Container } from \"./styles\";\n\nexport default function({ label, checked, onChange }) {\n    return (\n        <Container>\n            <span>{label}</span>\n            <Switch\n                checked={checked}\n                onChange={onChange}\n                height={15}\n                width={36}\n                onColor=\"#86d3ff\"\n                onHandleColor=\"#2693e6\"\n                handleDiameter={23}\n                uncheckedIcon={false}\n                checkedIcon={false}\n                boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n                activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            />\n        </Container>\n    );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    /* .theater { */\n    & {\n        flex: 1;\n        width: ${({ theaterMode }) => (theaterMode ? \"100%\" : \"50%\")};\n        height: ${({ theaterMode }) => (theaterMode ? \"70%\" : \"unset\")};\n        max-height: ${({ theaterMode }) => (theaterMode ? \"unset\" : \"70%\")};\n\n        background-color: #000;\n\n        align-self: flex-start;\n\n        display: flex;\n        flex-direction: column;\n\n        align-items: center;\n        justify-content: center;\n    }\n\n    #video-component {\n        width: 100%;\n        height: 100%;\n\n        outline: none;\n        background-color: #000;\n    }\n`;\n","import React from \"react\";\n\nimport { Container } from \"./styles\";\n\nexport default function VideoTheater({ source, onEnded, autoPlay, theaterMode }) {\n    return (\n        <Container theaterMode={theaterMode}>\n            <video id=\"video-component\" src={source} onEnded={onEnded} autoPlay={autoPlay} controls preload=\"metadata\" />\n        </Container>\n    );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    & * {\n        color: #000;\n    }\n\n    & {\n        position: fixed;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        background-color: rgba(0, 0, 0, 0.9);\n        z-index: 10;\n\n        display: flex;\n        flex-direction: column;\n\n        align-items: center;\n        justify-content: center;\n    }\n\n    .window {\n        width: 500px;\n        height: 500px;\n\n        border-radius: 5px;\n        background-color: #fff;\n\n        overflow: hidden;\n\n        display: flex;\n        flex-direction: column;\n    }\n\n    .title-bar {\n        height: 50px;\n        padding: 10px 20px;\n\n        display: flex;\n        flex-direction: row;\n\n        align-items: center;\n        justify-content: space-between;\n    }\n\n    .title {\n        color: #222;\n        font-size: 1.25rem;\n        font-weight: bold;\n    }\n\n    /* .close-modal .play */\n    button {\n        padding: 10px;\n        border-radius: 5px;\n\n        border: 1px solid #ccc;\n        background-color: #eee;\n    }\n\n    .body {\n        flex: 1;\n        padding: 15px 30px 30px 30px;\n\n        background-color: #eee;\n\n        display: flex;\n        flex-direction: column;\n\n        align-items: center;\n        justify-content: center;\n    }\n\n    .subtitle {\n        color: #444;\n        font-size: 1.05rem;\n        font-weight: bold;\n    }\n\n    .description {\n        color: #777;\n    }\n\n    #textbox {\n        width: 100%;\n        height: 100%;\n\n        resize: none;\n\n        padding: 5px;\n        margin-top: 5px;\n    }\n\n    .play {\n        padding: 10px 20px;\n        margin-top: 10px;\n        color: #fff;\n        font-size: 1rem;\n        background-color: #1a73e8;\n    }\n\n    .play:disabled {\n        background: #999;\n    }\n`;\n","import validator from \"validator\";\nimport React, { useState } from \"react\";\n\nimport { Container } from \"./styles\";\n\nimport Switch from \"../Switch\";\n\nexport default function LinkListModal({ setPlaylist, closeModal }) {\n    const [text, setText] = useState(\"\");\n    const [urlList, setUrlList] = useState([]);\n    const [isJSON, setIsJSON] = useState(false);\n\n    // test\n    React.useEffect(() => {\n        const initial_list = [\n            \"http://media.w3.org/2010/05/sintel/trailer.mp4\",\n            \"http://media.w3.org/2010/05/bunny/trailer.mp4\",\n            \"http://media.w3.org/2010/05/bunny/movie.mp4\"\n        ];\n        setUrlList(initial_list);\n        setText(initial_list.join(\",\\n\"));\n    }, []);\n\n    React.useEffect(() => {\n        if (isJSON) {\n            try {\n                const url_list = JSON.parse(text).filter(item => validator.isURL(item));\n                setUrlList(url_list);\n            } catch (error) {\n                setUrlList([]);\n            }\n        } else {\n            const url_list = text.split(/[\\n ,]+/).filter(item => validator.isURL(item));\n            setUrlList(url_list);\n        }\n    }, [isJSON, text]);\n\n    function playButtonHandle(event) {\n        setPlaylist(urlList);\n        closeModal();\n    }\n\n    function textAreaChangedHandle(event) {\n        const el_value = event.target.value;\n        setText(el_value);\n    }\n\n    return (\n        <Container>\n            <div className=\"window\">\n                <div className=\"title-bar\">\n                    <span className=\"title\">What are we going to watch?</span>\n                    <button className=\"close-modal\" onClick={e => closeModal()}>\n                        Close\n                    </button>\n                </div>\n                <div className=\"body\">\n                    <div>\n                        <span className=\"subtitle\">Insert your list of URL's below</span>\n                        <Switch label=\"JSON Array\" checked={isJSON} onChange={() => setIsJSON(!isJSON)} />\n                    </div>\n\n                    {!isJSON && <span className=\"description\">urls must be separated by commas or newlines</span>}\n\n                    <textarea id=\"textbox\" value={text} onChange={textAreaChangedHandle}></textarea>\n\n                    <span className=\"description\">URL list count: {urlList ? urlList.length : 0}</span>\n                    <button className=\"play\" onClick={playButtonHandle} disabled={!(urlList && urlList.length > 0)}>\n                        Play\n                    </button>\n                </div>\n            </div>\n        </Container>\n    );\n}\n","import styled from \"styled-components\";\n\nexport default styled.div`\n    & {\n        height: ${({ theaterMode }) => (theaterMode ? \"100%\" : \"unset\")};\n        max-width: ${({ theaterMode }) => (theaterMode ? \"unset\" : \"85%\")};\n        margin: ${({ theaterMode }) => (theaterMode ? \"none\" : \"50px auto\")};\n\n        display: flex;\n        flex-direction: ${({ theaterMode }) => (theaterMode ? \"column\" : \"row\")};\n    }\n`;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n    & {\n        max-width: ${({ theaterMode }) => (theaterMode ? \"1200px\" : \"unset\")};\n        margin: ${({ theaterMode }) => (theaterMode ? \"0 auto\" : \"0 20px\")};\n        padding: 10px 0 0 8px;\n\n        display: flex;\n\n        flex-direction: ${({ theaterMode }) => (theaterMode ? \"row\" : \"column-reverse\")};\n        justify-content: ${({ theaterMode }) => (theaterMode ? \"space-between\" : \"unset\")};\n    }\n\n    .video-info-container {\n        /* flex: 1; */\n        margin-top: ${({ theaterMode }) => (theaterMode ? \"unset\" : \"20px\")};\n        margin-right: ${({ theaterMode }) => (theaterMode ? \"20px\" : \"unset\")};\n\n        padding: 10px 0;\n        border-radius: 5px;\n        border: 1px solid #393939;\n    }\n\n    .playlist-controls-container {\n        width: 200px;\n\n        align-self: flex-start;\n\n        display: flex;\n        flex-direction: column;\n\n        padding: 10px;\n        border-radius: 5px;\n        border: 1px solid #393939;\n    }\n\n    .current-video-title {\n        margin: 0 15px;\n        font-size: 1.25rem;\n        line-height: 2.4rem;\n    }\n\n    .playlist-queue {\n        margin-top: 15px;\n        flex: 1;\n        list-style: none;\n\n        display: flex;\n        flex-direction: column;\n    }\n\n    .playlist-queue-item {\n        flex: 1;\n    }\n\n    .playlist-queue-item.current > .playlist-video-button {\n        background-color: rgba(75, 153, 255, 0.493);\n    }\n\n    .playlist-video-button {\n        width: 100%;\n        padding: 5px 15px;\n\n        border: none;\n        background: none;\n\n        display: flex;\n        flex-direction: row;\n\n        align-items: center;\n        justify-content: space-between;\n    }\n\n    .playlist-video-button:hover {\n        background-color: #393939;\n    }\n\n    .video-preview-container {\n        width: 150px;\n        height: 95px;\n        position: relative;\n\n        border-radius: 5px;\n        background-color: #000;\n    }\n\n    .video-preview {\n        width: 100%;\n        height: 100%;\n\n        border-radius: 5px;\n        object-fit: contain;\n    }\n\n    .overlay-info-container {\n        position: absolute;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        /* background-color: #fff; */\n        z-index: 1;\n    }\n\n    .overlay-info-time {\n        position: absolute;\n        bottom: 10px;\n        right: 10px;\n\n        padding: 5px;\n        background-color: rgba(0, 0, 0, 0.85);\n\n        color: #fff;\n        font-size: 0.8rem;\n        border-radius: 5px;\n    }\n\n    .video-url {\n        margin-left: 30px;\n    }\n`;\n","import validator from \"validator\";\nimport React, { useState } from \"react\";\nimport OnVisible from \"react-on-visible\";\n\nimport \"./styles/App.css\";\n\nimport Navbar from \"./components/Navbar\";\nimport Switch from \"./components/Switch\";\nimport VideoTheater from \"./components/VideoTheater\";\nimport LinkListModal from \"./components/LinkListModal\";\n\nimport PageContainer from \"./components/PageContainer\";\nimport InfoContainer from \"./components/InfoContainer\";\n\nfunction App() {\n    const [current, setCurrent] = useState(0);\n    const [playlist, setPlaylist] = useState([]);\n    const [autoplay, setAutoplay] = useState(true);\n    const [loadNext, setLoadNext] = useState(true);\n    const [theaterMode, setTheaterMode] = useState(true);\n    const [displayModal, setDisplayModal] = useState(!(playlist && playlist.length > 0));\n\n    function playlistAdd(url) {\n        if (validator.isURL(url)) {\n            setPlaylist([...playlist, url]);\n            return true;\n        }\n        return false;\n    }\n\n    function onEndedHandler(event) {\n        if (loadNext) {\n            if (current + 1 < playlist.length) {\n                setCurrent(current + 1);\n            } else {\n                setCurrent(0);\n            }\n        }\n    }\n\n    const VideoThumbnail = ({ videoUrl }) => {\n        const [visible, setVisible] = useState(false);\n        const [videoDuration, setVideoDuration] = useState(0);\n\n        return (\n            <OnVisible className=\"video-preview-container\" onChange={setVisible}>\n                {visible && (\n                    <>\n                        <video\n                            className=\"video-preview\"\n                            src={videoUrl + \"#t=3\"}\n                            autoPlay={false}\n                            controls={false}\n                            preload=\"metadata\"\n                            onLoadedMetadata={event => setVideoDuration(event.target.duration)}\n                        />\n                        <div className=\"overlay-info-container\">\n                            <span className=\"overlay-info-time\">\n                                {new Date(videoDuration * 1000)\n                                    .toISOString()\n                                    .substr(11, 8)\n                                    .replace(/00:/, \"\")}\n                            </span>\n                        </div>\n                    </>\n                )}\n            </OnVisible>\n        );\n    };\n\n    return (\n        <div id=\"app\">\n            {displayModal && <LinkListModal setPlaylist={setPlaylist} closeModal={() => setDisplayModal(false)} />}\n\n            <Navbar playlistAdd={playlistAdd} />\n\n            <div className=\"navbar-space\" style={{ height: \"56px\" }}></div>\n\n            <PageContainer theaterMode={theaterMode}>\n                <VideoTheater source={playlist[current]} onEnded={onEndedHandler} autoPlay={autoplay} theaterMode={theaterMode} />\n\n                <InfoContainer theaterMode={theaterMode}>\n                    <div className=\"video-info-container \">\n                        <span className=\"current-video-title\">{playlist[current]}</span>\n                        <ul className=\"playlist-queue\">\n                            {playlist &&\n                                playlist.map((video_url, id) => (\n                                    <li className={`playlist-queue-item ${id === current && \"current\"}`} key={id}>\n                                        <button className=\"playlist-video-button\" onClick={() => setCurrent(id)}>\n                                            <VideoThumbnail videoUrl={video_url} />\n                                            <span className=\"video-url\">{video_url}</span>\n                                        </button>\n                                    </li>\n                                ))}\n                        </ul>\n                    </div>\n\n                    <div className=\"playlist-controls-container\">\n                        <Switch label=\"Autoplay\" checked={autoplay} onChange={() => setAutoplay(!autoplay)} />\n                        <Switch label=\"Load Next\" checked={loadNext} onChange={() => setLoadNext(!loadNext)} />\n                        <Switch label=\"Theater Mode\" checked={theaterMode} onChange={() => setTheaterMode(!theaterMode)} />\n                    </div>\n                </InfoContainer>\n            </PageContainer>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}