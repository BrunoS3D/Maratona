{"version":3,"sources":["components/Navbar/styles.js","components/Navbar/index.js","components/Switch/index.js","components/VideoTheater/styles.js","components/VideoTheater/index.js","components/LinkListModal/styles.js","components/LinkListModal/index.js","components/Info/styles.js","App.js","index.js"],"names":["Container","styled","div","Navbar","playlistAdd","useState","url","setUrl","className","href","data-color-scheme","data-size","data-show-count","aria-label","onSubmit","event","preventDefault","type","value","onChange","target","placeholder","data-icon","checked","height","width","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","VideoTheater","source","onEnded","autoPlay","id","src","controls","preload","LinkListModal","setPlaylist","closeModal","text","setText","urlList","setUrlList","updateUrlList","url_list","split","filter","item","validator","isURL","React","useEffect","onClick","e","length","disabled","App","current","setCurrent","playlist","autoplay","setAutoplay","loadNext","setLoadNext","displayModal","setDisplayModal","map","video_url","key","Switch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f46237d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    & {\r\n        width: 100%;\r\n        height: 56px;\r\n        background-color: #282828;\r\n    }\r\n\r\n    .layout {\r\n        height: 100%;\r\n        max-width: 90%;\r\n        margin: 0 auto;\r\n\r\n        display: flex;\r\n        flex-direction: row;\r\n\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    form {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        display: flex;\r\n        flex-direction: row;\r\n\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    input {\r\n        padding: 5px 10px;\r\n        font-size: 1rem;\r\n        color: #282828;\r\n    }\r\n\r\n    input[type=\"url\"] {\r\n        min-width: 40%;\r\n\r\n        border-radius: 3px 0 0 3px;\r\n        border: 1px solid #393939;\r\n\r\n        color: #ccc;\r\n        background-color: #121212;\r\n    }\r\n\r\n    input[type=\"submit\"] {\r\n        color: #ccc;\r\n        border-radius: 0 3px 3px 0;\r\n\r\n        border: 1px solid #393939;\r\n        background-color: #393939;\r\n    }\r\n\r\n    .github-buttons {\r\n        display: flex;\r\n        flex-direction: row;\r\n\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .github-buttons > * {\r\n        margin-left: 5px;\r\n    }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport GitHubButton from \"react-github-btn\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nexport default function Navbar({ playlistAdd }) {\r\n    const [url, setUrl] = useState(\"\");\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        playlistAdd(url);\r\n        setUrl(\"\");\r\n    }\r\n\r\n    function handleInputChange(event) {\r\n        setUrl(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"layout\">\r\n                <GitHubButton\r\n                    href=\"https://github.com/BrunoS3D\"\r\n                    data-color-scheme=\"no-preference: dark; light: dark; dark: dark;\"\r\n                    data-size=\"large\"\r\n                    data-show-count=\"true\"\r\n                    aria-label=\"Follow @BrunoS3D on GitHub\"\r\n                >\r\n                    Follow @BrunoS3D\r\n                </GitHubButton>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"url\" value={url} onChange={handleInputChange} placeholder=\"Insert your video url...\" />\r\n                    <input type=\"submit\" value=\"Add\" />\r\n                </form>\r\n                <div className=\"github-buttons\">\r\n                    <GitHubButton\r\n                        href=\"https://github.com/BrunoS3D/Maratona/subscription\"\r\n                        data-color-scheme=\"no-preference: dark; light: dark; dark: dark;\"\r\n                        data-icon=\"octicon-eye\"\r\n                        data-size=\"large\"\r\n                        data-show-count=\"true\"\r\n                        aria-label=\"Watch BrunoS3D/Maratona on GitHub\"\r\n                    >\r\n                        Watch\r\n                    </GitHubButton>\r\n                    <GitHubButton\r\n                        href=\"https://github.com/BrunoS3D/Maratona\"\r\n                        data-color-scheme=\"no-preference: dark; light: dark; dark: dark;\"\r\n                        data-icon=\"octicon-star\"\r\n                        data-size=\"large\"\r\n                        data-show-count=\"true\"\r\n                        aria-label=\"Star BrunoS3D/Maratona on GitHub\"\r\n                    >\r\n                        Star\r\n                    </GitHubButton>\r\n                    <GitHubButton\r\n                        href=\"https://github.com/BrunoS3D/Maratona/fork\"\r\n                        data-color-scheme=\"no-preference: dark; light: dark; dark: dark;\"\r\n                        data-icon=\"octicon-repo-forked\"\r\n                        data-size=\"large\"\r\n                        data-show-count=\"true\"\r\n                        aria-label=\"Fork BrunoS3D/Maratona on GitHub\"\r\n                    >\r\n                        Fork\r\n                    </GitHubButton>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Switch from \"react-switch\";\r\n\r\nexport default function({ checked, onChange }) {\r\n    return (\r\n        <Switch\r\n            checked={checked}\r\n            onChange={onChange}\r\n            height={15}\r\n            width={36}\r\n            onColor=\"#86d3ff\"\r\n            onHandleColor=\"#2693e6\"\r\n            handleDiameter={23}\r\n            uncheckedIcon={false}\r\n            checkedIcon={false}\r\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n        />\r\n    );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    /* .theater { */\r\n    & {\r\n        width: 100%;\r\n        height: 70%;\r\n\r\n        background-color: #000;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    #video-component {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        outline: none;\r\n        background-color: #000;\r\n    }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nexport default function VideoTheater({ source, onEnded, autoPlay }) {\r\n    return (\r\n        <Container>\r\n            <video id=\"video-component\" src={source} onEnded={onEnded} autoPlay={autoPlay} controls preload=\"metadata\" />\r\n        </Container>\r\n    );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    & * {\r\n        color: #000;\r\n    }\r\n\r\n    & {\r\n        position: fixed;\r\n        top: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n        background-color: rgba(0, 0, 0, 0.9);\r\n        z-index: 10;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .window {\r\n        width: 500px;\r\n        height: 500px;\r\n\r\n        border-radius: 5px;\r\n        background-color: #fff;\r\n\r\n        overflow: hidden;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .title-bar {\r\n        height: 50px;\r\n        padding: 10px 20px;\r\n\r\n        display: flex;\r\n        flex-direction: row;\r\n\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    .title {\r\n        color: #222;\r\n        font-size: 1.25rem;\r\n        font-weight: bold;\r\n    }\r\n\r\n    /* .close-modal .play */\r\n    button {\r\n        padding: 10px;\r\n        border-radius: 5px;\r\n\r\n        border: 1px solid #ccc;\r\n        background-color: #eee;\r\n    }\r\n\r\n    .body {\r\n        flex: 1;\r\n        padding: 15px 30px 30px 30px;\r\n\r\n        background-color: #eee;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .subtitle {\r\n        color: #444;\r\n        font-size: 1.05rem;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .description {\r\n        color: #777;\r\n    }\r\n\r\n    #textbox {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        resize: none;\r\n\r\n        padding: 5px;\r\n        margin-top: 10px;\r\n    }\r\n\r\n    .play {\r\n        padding: 10px 20px;\r\n        margin-top: 10px;\r\n        color: #fff;\r\n        font-size: 1rem;\r\n        background-color: #1a73e8;\r\n    }\r\n\r\n    .play:disabled {\r\n        background: #999;\r\n    }\r\n`;\r\n","import validator from \"validator\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nexport default function LinkListModal({ setPlaylist, closeModal }) {\r\n    const [text, setText] = useState(\"\");\r\n    const [urlList, setUrlList] = useState([]);\r\n\r\n    // test\r\n    React.useEffect(() => {\r\n        const list_text =\r\n            \"http://media.w3.org/2010/05/sintel/trailer.mp4,\\nhttp://media.w3.org/2010/05/bunny/trailer.mp4\\nhttp://media.w3.org/2010/05/bunny/movie.mp4\";\r\n        updateUrlList(list_text);\r\n\r\n        // if (process.env.NODE_ENV === \"development\") {\r\n        //     const url_list = list_text.split(/[\\n ,]+/).filter(item => validator.isURL(item));\r\n\r\n        //     setPlaylist(url_list);\r\n        //     closeModal();\r\n        // }\r\n    }, [setPlaylist, closeModal]);\r\n\r\n    function playButtonHandle(event) {\r\n        setPlaylist(urlList);\r\n        closeModal();\r\n    }\r\n\r\n    function textAreaChangedHandle(event) {\r\n        const el_value = event.target.value;\r\n        updateUrlList(el_value);\r\n    }\r\n\r\n    function updateUrlList(value) {\r\n        setText(value);\r\n\r\n        const url_list = value.split(/[\\n ,]+/).filter(item => validator.isURL(item));\r\n        setUrlList(url_list);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"window\">\r\n                <div className=\"title-bar\">\r\n                    <span className=\"title\">What are we going to watch?</span>\r\n                    <button className=\"close-modal\" onClick={e => closeModal()}>\r\n                        Close\r\n                    </button>\r\n                </div>\r\n                <div className=\"body\">\r\n                    <span className=\"subtitle\">Insert your list of URL's below</span>\r\n                    <span className=\"description\">urls must be separated by commas or newlines</span>\r\n\r\n                    <textarea id=\"textbox\" value={text} onChange={textAreaChangedHandle}></textarea>\r\n\r\n                    <span className=\"description\">URL list count: {urlList ? urlList.length : 0}</span>\r\n                    <button className=\"play\" onClick={playButtonHandle} disabled={!(urlList && urlList.length > 0)}>\r\n                        Play\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    & {\r\n        max-width: 1200px;\r\n\r\n        margin: 0 auto;\r\n        padding: 10px 0 0 8px;\r\n\r\n        display: flex;\r\n        flex-direction: row;\r\n\r\n        justify-content: space-between;\r\n    }\r\n\r\n    .video-info-container {\r\n        flex: 1;\r\n        margin-right: 20px;\r\n\r\n        padding: 10px;\r\n        border: 1px solid #393939;\r\n    }\r\n\r\n    .playlist-controls-container {\r\n        width: 200px;\r\n\r\n        align-self: flex-start;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        padding: 10px;\r\n        border: 1px solid #393939;\r\n    }\r\n\r\n    .current-video-title {\r\n        font-size: 1.25rem;\r\n        line-height: 2.4rem;\r\n    }\r\n\r\n    label {\r\n        display: flex;\r\n        flex-direction: row;\r\n\r\n        margin: 5px 0;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    .playlist-queue {\r\n        flex: 1;\r\n        list-style: none;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .playlist-queue-item {\r\n        flex: 1;\r\n    }\r\n\r\n    .playlist-queue-item.current > .playlist-video-button {\r\n        background-color: rgba(75, 153, 255, 0.493);\r\n    }\r\n\r\n    .playlist-video-button {\r\n        width: 100%;\r\n        padding: 5px 10px;\r\n\r\n        border: none;\r\n        background: none;\r\n\r\n        display: flex;\r\n        flex-direction: row;\r\n\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    .playlist-video-button:hover {\r\n        background-color: #393939;\r\n    }\r\n\r\n    .video-preview {\r\n        width: auto;\r\n        height: 100px;\r\n        object-fit: contain;\r\n    }\r\n\r\n    .video-url {\r\n    }\r\n`;\r\n","import React, { useState } from \"react\";\nimport \"./styles/App.css\";\n\nimport Navbar from \"./components/Navbar\";\nimport Switch from \"./components/Switch\";\nimport VideoTheater from \"./components/VideoTheater\";\nimport LinkListModal from \"./components/LinkListModal\";\n\nimport { Container as InfoContainer } from \"./components/Info/styles\";\n\nfunction App() {\n    const [current, setCurrent] = useState(0);\n    const [playlist, setPlaylist] = useState([]);\n    const [autoplay, setAutoplay] = useState(true);\n    const [loadNext, setLoadNext] = useState(true);\n    const [displayModal, setDisplayModal] = useState(!(playlist && playlist.length > 0));\n\n    function playlistAdd(url) {\n        setPlaylist([...playlist, url]);\n    }\n\n    function onEndedHandler(event) {\n        if (loadNext) {\n            if (current + 1 < playlist.length) {\n                setCurrent(current + 1);\n            } else {\n                setCurrent(0);\n            }\n        }\n    }\n\n    return (\n        <div id=\"app\">\n            <Navbar playlistAdd={playlistAdd} />\n\n            {displayModal && <LinkListModal setPlaylist={setPlaylist} closeModal={() => setDisplayModal(false)} />}\n\n            <VideoTheater source={playlist[current]} onEnded={onEndedHandler} autoPlay={autoplay} />\n\n            <InfoContainer>\n                <div className=\"video-info-container \">\n                    <span className=\"current-video-title\">{playlist[current]}</span>\n                    <ul className=\"playlist-queue\">\n                        {playlist &&\n                            playlist.map((video_url, id) => (\n                                <li className={`playlist-queue-item ${id === current && \"current\"}`} key={id}>\n                                    <button className=\"playlist-video-button\" onClick={() => setCurrent(id)}>\n                                        <video\n                                            className=\"video-preview\"\n                                            src={video_url + \"#t=3\"}\n                                            autoPlay={false}\n                                            controls={false}\n                                            preload=\"metadata\"\n                                        />\n                                        <span className=\"video-url\">{video_url}</span>\n                                    </button>\n                                </li>\n                            ))}\n                    </ul>\n                </div>\n\n                <div className=\"playlist-controls-container\">\n                    <label>\n                        <span>Autoplay</span>\n                        <Switch checked={autoplay} onChange={() => setAutoplay(!autoplay)} />\n                    </label>\n                    <label>\n                        <span>Load next</span>\n                        <Switch checked={loadNext} onChange={() => setLoadNext(!loadNext)} />\n                    </label>\n                </div>\n            </InfoContainer>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}